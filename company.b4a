Build1=Default,b4a.example,HU2_ACCEPTALL
File1=arrow-right-solid.svg
File10=store.PNG
File11=target.png
File2=arrows-removebg-preview.png
File3=Branch.bal
File4=cyduck.jpg
File5=dashboard.png
File6=Device.bal
File7=icons8-arrow-48.png
File8=Layout.bal
File9=stock.png
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=core
Library2=json
Library3=okhttp
Library4=okhttputils2
Library5=stringutils
Library6=xui
Library7=randomaccessfile
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="34"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=barGraph
Module2=Branch
Module3=CheckBargraph
Module4=Device
Module5=Starter
NumberOfFiles=11
NumberOfLibraries=7
NumberOfModules=5
Version=13.1
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: B4A Example
	#VersionCode: 1
	#VersionName: 1.0
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	Private xui As XUI
	Public company As String
End Sub

Sub Globals
	Private ScrollView1 As ScrollView
	Dim PHPURL As String = "https://192.168.8.117/Company/controller/company.php?action=get_company_list&page=1"
	Dim primaryFontSize As Int = 1.4%y
	Dim secondaryFontSize As Int = 1%y
	Private Panel1 As Panel
	Private Label1 As Label
	Private Panel2 As Panel
	Dim barGraph As barGraph ' Corrected casing
	Dim barGraphPurchase As barGraph ' Renamed for consistency
	Dim purchasePanel As Panel
	Dim barPanel As Panel
	Dim saleNxtBtn As Button
	Dim saleBackBtn As Button
	Dim purchNxtBtn As Button
	Dim purchBackBtn As Button
	Dim sortBtnPurchase1 As RadioButton
	Dim sortBtnPurchase2 As RadioButton
	Dim sortBtn1 As RadioButton
	Public defBtn As RadioButton
	Public sortBtn2 As RadioButton
	Public sales1btn As RadioButton
	Public sales2btn As RadioButton
	Public sales3btn As RadioButton
	Public defBtnPurchase As RadioButton ' Added for purchase sorting
	Public purch1btn As RadioButton ' Added for purchase selection
	Public purch2btn As RadioButton
	Public purch3btn As RadioButton
	Public showDetailButton As Button
	Public legend() As String = Array As String("Sales1", "Sales2", "Sales3")
	Public legendPurchase() As String = Array As String("Purchase1", "Purchase2", "Purchase3")
	Dim height As Int = 0
	Dim companyPanel As Panel
	Dim totalGraphDataHeight As Int = 0
	Dim totalGetDataHeight As Int = 0
	Dim sortDefaultValue As String = ""
	Dim salesData1 As Int = 1
	Dim currentPage As Int = 1
	Dim barGraphInitialized As Boolean = False
	Dim barGraphInitializedPurchase As Boolean = False ' Renamed for clarity
	Dim PHPURLCompany As String = $"https://192.168.8.117/Company/controller/company.php?action=get_company_list&page=${currentPage}&company_sales=${salesData1}&company_type=${sortDefaultValue}"$
	Dim calculatedSize As Float = 0
	Dim topPositionSale As Int = 0
	Dim topPositionPurch As Int = 0
	Dim dashPanel As Panel
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
	Panel1.Color = Colors.Black
	Label1.Text = Label1.Text.ToUpperCase
	Label1.Typeface = Typeface.MONOSPACE
	ScrollView1.Panel.Color = Colors.ARGB(255, 241, 241, 241)
	Dim gradient As GradientDrawable
	gradient.Initialize("RIGHT_LEFT", Array As Int(Colors.RGB(225, 218, 218), Colors.RGB(189, 202, 217)))
	ScrollView1.Background = gradient
	ScrollView1.Panel.Height = Activity.Height
	Dim gradient As GradientDrawable
	gradient.Initialize("RIGHT_LEFT", Array As Int(Colors.ARGB(255, 185, 46, 52), Colors.ARGB(255, 61, 12, 2)))
	Panel2.Background = gradient
	

	dashPanel.Initialize("")
	topPositionSale = Panel2.Height
	ScrollView1.Panel.AddView(dashPanel, 5dip, Panel2.Height, 200dip, 40dip)
						
	Dim myImage As Bitmap = LoadBitmap(File.DirAssets, "dashboard.png")
	Dim imgView As ImageView
	imgView.Initialize("")
	imgView.Gravity = Gravity.FILL
	imgView.Bitmap = myImage
	dashPanel.AddView(imgView, 0dip, 12.5dip, 15dip, dashPanel.Height - 25dip)
						
	Dim dashLabel As Label
	dashLabel.Initialize("")
	dashLabel.Text = "Dashboard"
	dashLabel.TextColor = Colors.Black
	dashLabel.Gravity = Gravity.CENTER_VERTICAL
	dashLabel.Typeface = Typeface.MONOSPACE
	dashPanel.AddView(dashLabel, imgView.Width + 5dip, 0dip, dashPanel.Width, dashPanel.Height)
	calculatedSize = AdjustFontSizeToHeight(dashLabel, 2)
	dashLabel.TextSize = calculatedSize
	
	' Initialize panels
	barPanel.Initialize("")
	purchasePanel.Initialize("")
	companyPanel.Initialize("Panel")
	
	LoadGraphData
	LoadGraphDataPurchase
	LoadCompanyData
End Sub

Sub LoadCompanyData
	Try
		PHPURLCompany = $"https://192.168.8.117/Company/controller/company.php?action=get_company_list&page=${currentPage}"$
		Dim Job1 As HttpJob
		Job1.Initialize("GetData", Me)
		Job1.Download(PHPURL)
		ProgressDialogShow("Loading Data...")
	Catch
		Log(LastException.Message)
	End Try
End Sub

Sub LoadGraphData
	Try
		PHPURLCompany = $"https://192.168.8.117/Company/controller/company.php?action=get_company_list&page=${currentPage}&company_sales=${salesData1}&sort_type=${sortDefaultValue}"$
		Dim Job1 As HttpJob
		Job1.Initialize("GetCompany", Me)
		Job1.Download(PHPURLCompany)
		ProgressDialogShow("Loading Graph Data...")
	Catch
		Log("LoadGraphData Error: " & LastException.Message)
		ToastMessageShow("Error initiating graph load: " & LastException.Message, True)
	End Try
End Sub

Sub LoadGraphDataPurchase
	Try
		PHPURLCompany = $"https://192.168.8.117/Company/controller/company.php?action=get_company_list&page=${currentPage}&company_purchase=${salesData1}&sort_type=${sortDefaultValue}"$
		Dim Job1 As HttpJob
		Job1.Initialize("GetCompanyPurchase", Me)
		Job1.Download(PHPURLCompany)
		ProgressDialogShow("Loading Graph Data...")
	Catch
		Log("LoadGraphData Error: " & LastException.Message)
		ToastMessageShow("Error initiating graph load: " & LastException.Message, True)
	End Try
End Sub

Sub JobDone(job As HttpJob)
	ProgressDialogHide
	If job.Success Then
		Try
			Dim parser As JSONParser
			parser.Initialize(job.GetString)
			Dim getDataHeight As Int = 0
			Dim GetCompanySalesHeight As Int = 0
			Dim GetCompanyPurchaseHeight As Int = 0
			
			Select Case job.JobName
				Case "GetCompany"
					Dim salesArray As List = parser.NextArray
					If salesArray.Size = 0 Then
						ToastMessageShow("No data received", True)
						Return
					End If
					
					Dim totalCompanies As Int = salesArray.Size
					Dim sales(totalCompanies) As Int
					Dim comId(totalCompanies) As Int
					Dim sales1(totalCompanies) As Int
					Dim sales2(totalCompanies) As Int
					Dim purchase(totalCompanies) As Int
					Dim purchase1(totalCompanies) As Int
					Dim purchase2(totalCompanies) As Int
					Dim companyName(totalCompanies) As String
					Dim max_value(totalCompanies) As Int
					Dim maxSale As Int = 0
					
					For i = 0 To totalCompanies - 1
						Dim record As Map = salesArray.Get(i)
						companyName(i) = record.GetDefault("company_name", "Unknown")
						comId(i) = record.GetDefault("company_id", 0)
						sales(i) = record.GetDefault("sales_1", 0)
						sales1(i) = record.GetDefault("sales_2", 0)
						sales2(i) = record.GetDefault("sales_3", 0)
						purchase(i) = record.GetDefault("purchase_1", 0)
						purchase1(i) = record.GetDefault("purchase_2", 0)
						purchase2(i) = record.GetDefault("purchase_3", 0)
						max_value(i) = record.GetDefault("max_sales", 0)
						maxSale = Max(maxSale, max_value(i))
					Next
					
					Dim totalSalePanel As Panel
					totalSalePanel.Initialize("")
					totalSalePanel.Height = 40dip
					barPanel.Height = 530dip
					GetCompanySalesHeight = Panel2.Height + dashPanel.Height
					If Not(barGraphInitialized) Then
						saleNxtBtn.Initialize("nxtBtn")
						saleBackBtn.Initialize("backbtn")
						sortBtn1.Initialize("sortBtn1")
						sortBtn2.Initialize("sortBtn2")
						defBtn.Initialize("defBtn")
						sales1btn.Initialize("sales1btn")
						sales2btn.Initialize("sales2btn")
						sales3btn.Initialize("sales3btn")
						showDetailButton.Initialize("showDetailButton")
						
						
						ScrollView1.Panel.AddView(totalSalePanel, 5dip, GetCompanySalesHeight , Activity.Width, totalSalePanel.Height)
						
						Dim myImage As Bitmap = LoadBitmap(File.DirAssets, "stock.png")
						Dim imgView As ImageView
						imgView.Initialize("")
						imgView.Gravity = Gravity.FILL
						imgView.Bitmap = myImage
						totalSalePanel.AddView(imgView, 0dip, 12.5dip, 15dip, totalSalePanel.Height - 25dip)
	
						Dim totalSaleLabel As Label
						totalSaleLabel.Initialize("")
						totalSaleLabel.Text = "Total Sales"
						totalSaleLabel.TextColor = Colors.Black
						totalSaleLabel.Gravity = Gravity.CENTER_VERTICAL
						totalSaleLabel.Typeface = Typeface.MONOSPACE
						totalSalePanel.AddView(totalSaleLabel, imgView.Width + 5dip, 0dip, Activity.Width, 40dip)
						AdjustFontSizeToHeight(totalSaleLabel, 2)
						
						topPositionSale = topPositionSale + totalSalePanel.Height
						GetCompanySalesHeight = GetCompanySalesHeight + totalSalePanel.Height
						ScrollView1.Panel.AddView(barPanel, 25dip, GetCompanySalesHeight , Activity.Width - 50dip, barPanel.Height)
						barPanel.Color = Colors.White
						barPanel.RemoveAllViews
						barPanel.Invalidate
						
						GetCompanyPurchaseHeight = GetCompanySalesHeight + barPanel.Height
						Log($"GetCompanyPurchaseHeight:${GetCompanyPurchaseHeight}"$)
						barGraph.Initialize(Activity, barPanel, sales, sales1, sales2, companyName, legend, maxSale, "Total Sale of the Company", comId, "Branch", saleNxtBtn, saleBackBtn, sortBtn1, sortBtn2, defBtn, sales1btn, sales2btn, sales3btn,showDetailButton)
						barGraphInitialized = True
						topPositionSale = topPositionSale + barPanel.Height
						ProgressDialogHide
					Else
						barGraph.sale_1 = sales
						barGraph.sale_2 = sales1
						barGraph.sale_3 = sales2
						barGraph.product1 = companyName
						barGraph.comId1 = comId ' Corrected to use comId
						barGraph.UpdateGraph
					End If
					GetCompanySalesHeight = Panel2.Height + dashPanel.Height + totalSalePanel.Height + barPanel.Height
					topPositionSale = GetCompanySalesHeight
					GetCompanyPurchaseHeight = GetCompanySalesHeight
					Log($"GetCompanyPurchaseHeight:${GetCompanyPurchaseHeight}"$)
				Case "GetCompanyPurchase"
					Log($"topPositionSale:${topPositionSale}"$)
					Dim salesArray As List = parser.NextArray
					If salesArray.Size = 0 Then
						ToastMessageShow("No data received", True)
						Return
					End If
					Dim totalCompanies As Int = salesArray.Size
					Dim purchase(totalCompanies) As Int
					Dim purchase1(totalCompanies) As Int
					Dim purchase2(totalCompanies) As Int
					Dim companyName(totalCompanies) As String
					Dim comId(totalCompanies) As Int
					Dim maxSale As Int = 0
					
					For i = 0 To totalCompanies - 1
						Dim record As Map = salesArray.Get(i)
						companyName(i) = record.GetDefault("company_name", "Unknown")
						comId(i) = record.GetDefault("company_id", 0)
						purchase(i) = record.GetDefault("purchase_1", 0)
						purchase1(i) = record.GetDefault("purchase_2", 0)
						purchase2(i) = record.GetDefault("purchase_3", 0)
						maxSale = Max(maxSale, record.GetDefault("max_sales", 0))
					Next
					
					Dim totalPurchasePanel As Panel
					totalPurchasePanel.Initialize("")
					purchasePanel.Height = 450dip
					totalPurchasePanel.Height = 40dip
					GetCompanyPurchaseHeight = 900
					If barGraphInitializedPurchase = False Then
						purchNxtBtn.Initialize("purchNxtBtn")
						purchBackBtn.Initialize("purchBackBtn")
						sortBtnPurchase1.Initialize("sortBtnPurchase1")
						sortBtnPurchase2.Initialize("sortBtnPurchase2")
						defBtnPurchase.Initialize("defBtnPurchase")
						purch1btn.Initialize("purch1btn")
						purch2btn.Initialize("purch2btn")
						purch3btn.Initialize("purch3btn")
						showDetailButton.Initialize("showDetailButton")
						
						ScrollView1.Panel.AddView(totalPurchasePanel, 5dip, GetCompanyPurchaseHeight, Activity.Width, totalPurchasePanel.Height)
						
						Dim myImage As Bitmap = LoadBitmap(File.DirAssets, "stock.png")
						Dim imgView As ImageView
						imgView.Initialize("")
						imgView.Gravity = Gravity.FILL
						imgView.Bitmap = myImage
						totalPurchasePanel.AddView(imgView, 0dip, 12.5dip, 15dip, totalPurchasePanel.Height - 25dip)
						
						Dim totalPurchaseLabel As Label
						totalPurchaseLabel.Initialize("")
						totalPurchaseLabel.Text = "Total Purchases"
						totalPurchaseLabel.TextColor = Colors.Black
						totalPurchaseLabel.Gravity = Gravity.CENTER_VERTICAL
						totalPurchaseLabel.Typeface = Typeface.MONOSPACE
						totalPurchasePanel.AddView(totalPurchaseLabel, imgView.Width + 5dip, 0dip, Activity.Width, totalPurchasePanel.Height)
						AdjustFontSizeToHeight(totalPurchaseLabel, 2)
						
						GetCompanyPurchaseHeight = GetCompanyPurchaseHeight + totalPurchasePanel.Height
						ScrollView1.Panel.AddView(purchasePanel, 25dip, GetCompanyPurchaseHeight, Activity.Width - 50dip, purchasePanel.Height)
						purchasePanel.Color = Colors.White
						purchasePanel.RemoveAllViews
						purchasePanel.Invalidate
						
						barGraphPurchase.Initialize(Activity, purchasePanel, purchase, purchase1, purchase2, companyName, legendPurchase, maxSale, "Total Purchase Per Company", comId, "Branch", purchNxtBtn, purchBackBtn, sortBtnPurchase1, sortBtnPurchase2, defBtnPurchase, purch1btn, purch2btn, purch3btn,showDetailButton)
						barGraphInitializedPurchase = True
						ProgressDialogHide
					Else
						barGraphPurchase.sale_1 = purchase ' Adjusted to purchase properties
						barGraphPurchase.sale_2 = purchase1
						barGraphPurchase.sale_3 = purchase2
						barGraphPurchase.product1 = companyName
						barGraphPurchase.comId1 = comId ' Corrected to use comId
						barGraphPurchase.UpdateGraph
					End If
					topPositionPurch = topPositionSale + totalPurchasePanel.top + purchasePanel.Height
					ScrollView1.Panel.Height = purchasePanel.top + purchasePanel.Height + 360dip
				Case "GetData"
					Dim salesArray As List = parser.NextArray
					If salesArray.Size = 0 Then
						ToastMessageShow("No data received", True)
						Return
					End If
					Dim padding As Int = 10dip
					Dim count As Int = 0
					Dim rowNum As Int = 3
					Dim mainPanelWidth As Int = 0
					Dim panelHeight As Int = 150dip
					height = panelHeight - 70dip
					For Each record As Map In salesArray
						If count Mod 3 = 0 Then height = height + panelHeight
						Dim col As Int = count Mod 3
						Dim row As Int = Floor(count / 3)
						Dim name As String = record.Get("company_name")
						Dim company_id As Int = record.Get("company_id")
						Dim total_count As Int = record.Get("total_branch_count")
						Dim total_pos As Int = record.Get("totalDevices")
						
						
						companyPanel.Initialize("Panel")
						ScrollView1.Panel.AddView(companyPanel, 25dip, 1580, Activity.Width - 50dip, height)
						
						mainPanelWidth = companyPanel.Width / rowNum
						Dim Panel As Panel
						Panel.Initialize("")
						companyPanel.AddView(Panel, col * (mainPanelWidth + 5dip), Panel2.Height + (row * (panelHeight + 10dip)), mainPanelWidth - 10dip, panelHeight)
						
						Dim PanelTitle As Panel
						PanelTitle.Initialize("Panel2")
						PanelTitle.Color = Colors.Black
						PanelTitle.Tag = name
						Panel.AddView(PanelTitle, 0, 0, Panel.Width, panelHeight - 120dip)
						
						Dim Label17 As Label
						Label17.Initialize("Label17")
						Label17.Text = name.ToUpperCase
						Label17.Tag = company_id
						Label17.TextSize = 18
						Label17.TextColor = Colors.White
						Label17.Gravity = Gravity.CENTER_VERTICAL
						Label17.Typeface = Typeface.MONOSPACE
						PanelTitle.AddView(Label17, 5dip, 0dip, PanelTitle.Width, PanelTitle.Height)
						
						Dim myImage As Bitmap = LoadBitmap(File.DirAssets, "arrows-removebg-preview.png")
						If myImage.IsInitialized Then
							Dim resizedImage As Bitmap = myImage.Resize(DipToCurrent(4.5%x), myImage.Height * DipToCurrent(2%y) / myImage.Width, True)
							Dim imgView As ImageView
							imgView.Initialize("")
							imgView.Gravity = Gravity.FILL
							imgView.Bitmap = myImage
							PanelTitle.AddView(imgView, PanelTitle.Width - 5%x, 5dip, 5%x, PanelTitle.Height - 10dip)
						Else
							Log("Error loading image")
						End If
						
						Dim panelWidth As Int = Panel.Width / 3
						Dim padding As Int = 10dip
						Dim labelheight As Int = panelHeight - PanelTitle.Height
						panelWidth = Panel.Width / 2
						
						Dim totalStore As Label
						totalStore.Initialize("")
						totalStore.Text = total_count
						totalStore.TextColor = Colors.Black
						totalStore.TextSize = primaryFontSize
						totalStore.Gravity = Gravity.CENTER
						totalStore.Typeface = Typeface.SERIF
						Panel.AddView(totalStore, 0, PanelTitle.Height, panelWidth, labelheight - 30dip)
						
						Dim totalStoreLabel As Label
						totalStoreLabel.Initialize("")
						totalStoreLabel.Text = " Total Store"
						totalStoreLabel.TextColor = Colors.Gray
						totalStoreLabel.TextSize = secondaryFontSize
						totalStoreLabel.Gravity = Gravity.CENTER
						totalStoreLabel.Typeface = Typeface.MONOSPACE
						totalStoreLabel.Text = totalStoreLabel.Text.ToUpperCase
						Panel.AddView(totalStoreLabel, 0, totalStore.top + padding + 20dip, panelWidth, labelheight)
						
						Dim totalPos As Label
						totalPos.Initialize("")
						totalPos.Text = total_pos
						totalPos.TextColor = Colors.Black
						totalPos.TextSize = primaryFontSize
						totalPos.Gravity = Gravity.CENTER
						totalPos.Typeface = Typeface.SERIF
						Panel.AddView(totalPos, panelWidth, PanelTitle.Height, panelWidth, labelheight - 30dip)
						
						Dim totalPosLabel As Label
						totalPosLabel.Initialize("")
						totalPosLabel.Text = " Total Pos"
						totalPosLabel.TextColor = Colors.Gray
						totalPosLabel.TextSize = secondaryFontSize
						totalPosLabel.Gravity = Gravity.CENTER
						totalPosLabel.Typeface = Typeface.MONOSPACE
						totalPosLabel.Text = totalPosLabel.Text.ToUpperCase
						Panel.AddView(totalPosLabel, panelWidth, totalPos.top + padding + 20dip, panelWidth, labelheight)
						
						Dim cd As ColorDrawable
						cd.Initialize2(Colors.White, 0dip, 0dip, Colors.Black)
						Panel.Background = cd
						count = count + 1
					Next
					totalGetDataHeight = Panel2.Height + companyPanel.Height
				
				Case "UpdateData"
					ToastMessageShow("Data updated successfully", False)
					LoadCompanyData
				Case Else
					Log("Unknown job: " & job.JobName)
			End Select
			
		Catch
			Log("Error parsing data: " & LastException.Message)
		End Try
	Else
		ToastMessageShow("Error: " & job.ErrorMessage, True)
	End If
	job.Release
End Sub

Sub Activity_Resume
End Sub

Sub Activity_Pause(UserClosed As Boolean)
End Sub

Private Sub Label17_Click
	Dim clickedLabel As Label = Sender
	Dim selectedCompany As String = clickedLabel.Tag
	Starter.company_selected = selectedCompany
	StartActivity("Branch")
End Sub

Sub nxtBtn_Click
	Log("sad")
End Sub

Sub sortBtn1_Click
	Dim chk As RadioButton = Sender
	Dim index As String = chk.Tag
    
	sortDefaultValue = index.ToLowerCase ' "asc"
	Log($"sort value: ${sortDefaultValue}"$)
    
	If Not(barGraphInitialized) Then
		ToastMessageShow("Graph not yet initialized.", True)
		Return
	End If
    
	' Check if the selected sales data is hidden in the legend
	Dim checkedSales() As Boolean = barGraph.GetCheckedSales
	If checkedSales.Length > 0 Then
		Select Case salesData1
			Case 1
				If Not(checkedSales(0)) Then
					ToastMessageShow("Please show Sales1 in the legend before sorting by it.", True)
					Return
				End If
			Case 2
				If Not(checkedSales(1)) Then
					ToastMessageShow("Please show Sales2 in the legend before sorting by it.", True)
					Return
				End If
			Case 3
				If Not(checkedSales(2)) Then
					ToastMessageShow("Please show Sales3 in the legend before sorting by it.", True)
					Return
				End If
		End Select
	End If
    
	LoadGraphData
End Sub


Sub sortBtn2_Click
	Dim chk As RadioButton = Sender
	Dim index As String = chk.Tag
    
	sortDefaultValue = index.ToLowerCase ' "desc"
	Log($"sort value: ${sortDefaultValue}"$)
    
	If Not(barGraphInitialized) Then
		ToastMessageShow("Graph not yet initialized.", True)
		Return
	End If
    
	' Check if the selected sales data is hidden in the legend
	Dim checkedSales() As Boolean = barGraph.GetCheckedSales
	If checkedSales.Length > 0 Then
		Select Case salesData1
			Case 1
				If Not(checkedSales(0)) Then
					ToastMessageShow("Please show Sales1 in the legend before sorting by it.", True)
					Return
				End If
			Case 2
				If Not(checkedSales(1)) Then
					ToastMessageShow("Please show Sales2 in the legend before sorting by it.", True)
					Return
				End If
			Case 3
				If Not(checkedSales(2)) Then
					ToastMessageShow("Please show Sales3 in the legend before sorting by it.", True)
					Return
				End If
		End Select
	End If
    
	LoadGraphData
End Sub



Sub defBtn_Click
	sortDefaultValue = ""
	Log("Default sorting applied")
	LoadGraphData
End Sub

Sub defBtnPurchase_Click
	sortDefaultValue = ""
	Log("Default sorting applied for purchases")
	LoadGraphDataPurchase
End Sub

Sub sales1btn_Click
	salesData1 = 1
	Log("Sales 1 selected")
	If sortDefaultValue <> "" Then
		' LoadGraphData
	End If
End Sub

Sub sales2btn_Click
	salesData1 = 2
	Log("Sales 2 selected")
	If sortDefaultValue <> "" Then
		'LoadGraphData
	End If
End Sub

Sub sales3btn_Click
	salesData1 = 3
	Log("Sales 3 selected")
	If sortDefaultValue <> "" Then
		'LoadGraphData
	End If
End Sub

Sub sortBtnPurchase1_Click
	Dim chk As RadioButton = Sender
	Dim index As String = chk.Tag
    
	sortDefaultValue = index.ToLowerCase ' "desc"
	Log($"sort value: ${sortDefaultValue}"$)
    
	If Not(barGraphInitializedPurchase) Then
		ToastMessageShow("Graph not yet initialized.", True)
		Return
	End If
    
	' Check if the selected sales data is hidden in the legend
	Dim checkedSales() As Boolean = barGraphPurchase.GetCheckedSales
	If checkedSales.Length > 0 Then
		Select Case salesData1
			Case 1
				If Not(checkedSales(0)) Then
					ToastMessageShow("Please show Purchase 1 in the legend before sorting by it.", True)
					Return
				End If
			Case 2
				If Not(checkedSales(1)) Then
					ToastMessageShow("Please show Purchase 2 in the legend before sorting by it.", True)
					Return
				End If
			Case 3
				If Not(checkedSales(2)) Then
					ToastMessageShow("Please show Purchase 3 in the legend before sorting by it.", True)
					Return
				End If
		End Select
	End If
    
	LoadGraphDataPurchase
End Sub

Sub sortBtnPurchase2_Click
	Dim chk As RadioButton = Sender
	Dim index As String = chk.Tag
    
	sortDefaultValue = index.ToLowerCase ' "desc"
	Log($"sort value: ${sortDefaultValue}"$)
    
	If Not(barGraphInitializedPurchase) Then
		ToastMessageShow("Graph not yet initialized.", True)
		Return
	End If
    
	' Check if the selected sales data is hidden in the legend
	Dim checkedSales() As Boolean = barGraphPurchase.GetCheckedSales
	If checkedSales.Length > 0 Then
		Select Case salesData1
			Case 1
				If Not(checkedSales(0)) Then
					ToastMessageShow("Please show Purchase 1 in the legend before sorting by it.", True)
					Return
				End If
			Case 2
				If Not(checkedSales(1)) Then
					ToastMessageShow("Please show Purchase 2 in the legend before sorting by it.", True)
					Return
				End If
			Case 3
				If Not(checkedSales(2)) Then
					ToastMessageShow("Please show Purchase 3 in the legend before sorting by it.", True)
					Return
				End If
		End Select
	End If
    
	LoadGraphDataPurchase
End Sub

Sub purch1btn_Click
	salesData1 = 1
	Log("Purchase 1 selected")
	If sortDefaultValue <> "" Then
		'LoadGraphDataPurchase
	End If
End Sub

Sub purch2btn_Click
	salesData1 = 2
	Log("Purchase 2 selected")
	If sortDefaultValue <> "" Then
		'LoadGraphDataPurchase
	End If
End Sub

Sub purch3btn_Click
	salesData1 = 3
	Log("Purchase 3 selected")
	If sortDefaultValue <> "" Then
		' LoadGraphDataPurchase
	End If
End Sub

Sub AdjustFontSizeToHeight(lbl As Label, fontScaleFactor As Float) As Float
	Dim fontSize As Float = lbl.Height * fontScaleFactor / GetDeviceDensity
	lbl.TextSize = fontSize ' Apply the size directly
	Return fontSize
End Sub

Sub GetDeviceDensity As Float
	Dim pixelWidth As Int = 100%x
	Dim dipWidth As Int = 100dip
	Return pixelWidth / dipWidth
End Sub